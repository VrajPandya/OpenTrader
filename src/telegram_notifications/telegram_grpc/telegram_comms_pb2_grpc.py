# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import telegram_comms_pb2 as telegram__comms__pb2


class telegram_commsStub(object):
    """The telegram_comms service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sendNotification = channel.unary_unary(
                '/telegram_comms/sendNotification',
                request_serializer=telegram__comms__pb2.NotificationMessage.SerializeToString,
                response_deserializer=telegram__comms__pb2.ServerReply.FromString,
                )


class telegram_commsServicer(object):
    """The telegram_comms service definition.
    """

    def sendNotification(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_telegram_commsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sendNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.sendNotification,
                    request_deserializer=telegram__comms__pb2.NotificationMessage.FromString,
                    response_serializer=telegram__comms__pb2.ServerReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'telegram_comms', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class telegram_comms(object):
    """The telegram_comms service definition.
    """

    @staticmethod
    def sendNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/telegram_comms/sendNotification',
            telegram__comms__pb2.NotificationMessage.SerializeToString,
            telegram__comms__pb2.ServerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
